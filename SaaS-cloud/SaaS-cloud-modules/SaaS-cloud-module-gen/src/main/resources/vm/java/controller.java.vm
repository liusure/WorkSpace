package ${packageName}.controller;

import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;
import org.apache.commons.lang3.ArrayUtils;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.saas.common.core.controller.BaseController;
import com.saas.common.core.entity.AjaxResult;
import com.saas.common.core.page.DataPageable;
import com.saas.common.core.page.DataPage;
import com.saas.common.security.annotation.PreAuthorize;


import com.saas.log.annotation.Log;
import com.saas.common.enums.BusinessType;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.${ClassName}Service;
import com.saas.common.util.poi.ExcelUtil;
import com.saas.common.util.poi.PoiField;


/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller extends BaseController
{
    @Autowired
    private ${ClassName}Service ${className}Service;

    /**
     * 查询${functionName}列表
     */
    @PreAuthorize(hasPermi="${permissionPrefix}:list")
    @GetMapping("/list")
#if($table.crud)
    public AjaxResult list(DataPageable pageable)
    {
        DataPage<${ClassName}> page = ${className}Service.getListPage(pageable);
		return AjaxResult.success(page);
    }
#elseif($table.tree)
    public AjaxResult list(DataPageable pageable)
    {
        List<${ClassName}> list = ${className}Service.getList(pageable);
        return AjaxResult.success(list);
    }
#end

    /**
     * 导出${functionName}列表
     */
    @PreAuthorize(hasPermi="${permissionPrefix}:export")
    @Log(title = "${functionName}", businessType = BusinessType.EXPORT)
    @GetMapping("/export")
    public AjaxResult export(DataPageable pageable)
    {
    	List<${ClassName}> list = ${className}Service.getList(pageable);
		List<PoiField> fields = new ArrayList<>();
		fields.add(new PoiField("id", "ID", 1));
				
		ExcelUtil<${ClassName}> util = new ExcelUtil<${ClassName}>(${ClassName}.class, fields);
		return util.exportExcel(list, "${businessName}");
		       
    }

    /**
     * 获取${functionName}详细信息
     */
    @PreAuthorize(hasPermi="${permissionPrefix}:query")
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public AjaxResult getInfo(@PathVariable("${pkColumn.javaField}") Long ${pkColumn.javaField})
    {
        return AjaxResult.success(${className}Service.getById(${pkColumn.javaField}));
    }

    /**
     * 新增${functionName}
     */
    @PreAuthorize(hasPermi="${permissionPrefix}:add")
    @Log(title = "${functionName}", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody ${ClassName} ${className})
    {       
        ${className}Service.save(${className});
		return toAjax(1);
    }

    /**
     * 修改${functionName}
     */
    @PreAuthorize(hasPermi="${permissionPrefix}:edit")
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody ${ClassName} ${className})
    {
        ${className}Service.save(${className});
		return toAjax(1);
    }

    /**
     * 删除${functionName}
     */
    @PreAuthorize(hasPermi="${permissionPrefix}:remove")
    @Log(title = "${functionName}", businessType = BusinessType.DELETE)
	@DeleteMapping("/{${pkColumn.javaField}s}")
    public AjaxResult remove(@PathVariable Long[] ${pkColumn.javaField}s)
    {
    	for (Long id : ${pkColumn.javaField}s) {
			${className}Service.delete(id);
		}
		return toAjax(${pkColumn.javaField}s.length);       
    }
}
